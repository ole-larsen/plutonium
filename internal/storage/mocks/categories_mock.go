// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/db/repository/categories.go
//
// Generated by this command:
//
//	mockgen -source=internal/storage/db/repository/categories.go -destination=internal/storage/mocks/categories_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	sqlx "github.com/jmoiron/sqlx"
	repository "github.com/ole-larsen/plutonium/internal/storage/db/repository"
	models "github.com/ole-larsen/plutonium/models"
	gomock "go.uber.org/mock/gomock"
)

// MockCategoriesRepositoryInterface is a mock of CategoriesRepositoryInterface interface.
type MockCategoriesRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCategoriesRepositoryInterfaceMockRecorder
	isgomock struct{}
}

// MockCategoriesRepositoryInterfaceMockRecorder is the mock recorder for MockCategoriesRepositoryInterface.
type MockCategoriesRepositoryInterfaceMockRecorder struct {
	mock *MockCategoriesRepositoryInterface
}

// NewMockCategoriesRepositoryInterface creates a new mock instance.
func NewMockCategoriesRepositoryInterface(ctrl *gomock.Controller) *MockCategoriesRepositoryInterface {
	mock := &MockCategoriesRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockCategoriesRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategoriesRepositoryInterface) EXPECT() *MockCategoriesRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetPublicCollectibleCategories mocks base method.
func (m *MockCategoriesRepositoryInterface) GetPublicCollectibleCategories(ctx context.Context, users *repository.UsersRepository) ([]*models.PublicCategory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicCollectibleCategories", ctx, users)
	ret0, _ := ret[0].([]*models.PublicCategory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicCollectibleCategories indicates an expected call of GetPublicCollectibleCategories.
func (mr *MockCategoriesRepositoryInterfaceMockRecorder) GetPublicCollectibleCategories(ctx, users any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicCollectibleCategories", reflect.TypeOf((*MockCategoriesRepositoryInterface)(nil).GetPublicCollectibleCategories), ctx, users)
}

// InnerDB mocks base method.
func (m *MockCategoriesRepositoryInterface) InnerDB() *sqlx.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InnerDB")
	ret0, _ := ret[0].(*sqlx.DB)
	return ret0
}

// InnerDB indicates an expected call of InnerDB.
func (mr *MockCategoriesRepositoryInterfaceMockRecorder) InnerDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InnerDB", reflect.TypeOf((*MockCategoriesRepositoryInterface)(nil).InnerDB))
}

// Ping mocks base method.
func (m *MockCategoriesRepositoryInterface) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockCategoriesRepositoryInterfaceMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockCategoriesRepositoryInterface)(nil).Ping))
}
