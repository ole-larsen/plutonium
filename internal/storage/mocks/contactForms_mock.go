// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/db/repository/contactForms.go
//
// Generated by this command:
//
//	mockgen -source=internal/storage/db/repository/contactForms.go -destination=internal/storage/mocks/contactForms_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	sqlx "github.com/jmoiron/sqlx"
	gomock "go.uber.org/mock/gomock"
)

// MockContactFormRepositoryInterface is a mock of ContactFormRepositoryInterface interface.
type MockContactFormRepositoryInterface struct {
	isgomock struct{}
	ctrl     *gomock.Controller
	recorder *MockContactFormRepositoryInterfaceMockRecorder
}

// MockContactFormRepositoryInterfaceMockRecorder is the mock recorder for MockContactFormRepositoryInterface.
type MockContactFormRepositoryInterfaceMockRecorder struct {
	mock *MockContactFormRepositoryInterface
}

// NewMockContactFormRepositoryInterface creates a new mock instance.
func NewMockContactFormRepositoryInterface(ctrl *gomock.Controller) *MockContactFormRepositoryInterface {
	mock := &MockContactFormRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockContactFormRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContactFormRepositoryInterface) EXPECT() *MockContactFormRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockContactFormRepositoryInterface) Create(ctx context.Context, contactFormMap map[string]any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, contactFormMap)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockContactFormRepositoryInterfaceMockRecorder) Create(ctx, contactFormMap any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockContactFormRepositoryInterface)(nil).Create), ctx, contactFormMap)
}

// InnerDB mocks base method.
func (m *MockContactFormRepositoryInterface) InnerDB() *sqlx.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InnerDB")
	ret0, _ := ret[0].(*sqlx.DB)
	return ret0
}

// InnerDB indicates an expected call of InnerDB.
func (mr *MockContactFormRepositoryInterfaceMockRecorder) InnerDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InnerDB", reflect.TypeOf((*MockContactFormRepositoryInterface)(nil).InnerDB))
}

// Ping mocks base method.
func (m *MockContactFormRepositoryInterface) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockContactFormRepositoryInterfaceMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockContactFormRepositoryInterface)(nil).Ping))
}
