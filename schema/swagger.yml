---
swagger: "2.0"
info:
  title: "Plutonium Service API"
  version: "1.0.0"
  description: |
    The Plutonium Service API provides endpoints to support the operations of the NFT Marketplace.
    This document outlines the API's structure, response formats, and capabilities for integration.
host: "plutonium"
basePath: "/api/v1"
schemes:
  - http
securityDefinitions:
  bearer:
    type: apiKey
    in: header
    name: Authorization
  x-token:
    type: apiKey
    in: header
    name: x-token
paths:
  /ping:
    get:
      tags:
        - Public
      summary: Ping endpoint for server health and latency testing.
      description: |
        The ping endpoint provides a simple "pong" response to confirm server availability.
        Use this endpoint to:
        - Verify connectivity between the client and server.
        - Measure network latency for diagnostics.
        - Perform quick and reliable health checks over HTTP.
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: "Successful response indicating server availability."
          schema:
            $ref: "#/definitions/PingResponse"
        500:
          description: |
            Internal Server Error. This typically indicates a server-side issue or
            an unexpected runtime error preventing proper functionality.
          schema:
            $ref: "#/definitions/ErrorResponse"
  /metrics:
    get:
      tags:
        - Monitoring
      summary: Retrieve Prometheus Metrics
      description: |
        This endpoint provides Prometheus-compatible metrics for monitoring the application. 
        It is typically used by Prometheus or similar monitoring tools to scrape metrics data.
      produces:
        - application/json
      responses:
        200:
          description: Metrics retrieved successfully.
          schema:
                $ref: "#/definitions/PrometheusResponse"
  # frontend API
  /frontend/header:
    get:
      security:
        - x-token: []
      tags:
        - Frontend
      parameters:
        - name: provider
          in: query
          type: string
          description: "The provider to be used in the header."
          required: false
      summary: "Fetches the public header for the frontend."
      produces:
        - "application/json"
      responses:
        200:
          description: "Successfully fetched the header."
          schema:
            $ref: '#/definitions/PublicHeaderResponse'
        400:
          description: "Bad request due to missing or invalid parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized. The request is missing valid authentication."
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found. The requested resource could not be found."
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error."
          schema:
            $ref: "#/definitions/ErrorResponse"
  /frontend/footer:
    get:
      security:
        - x-token: []
      tags:
        - Frontend
      parameters:
        - name: provider
          in: query
          type: string
          description: "The provider to be used in the footer"
          required: false
      summary: "Fetches the public footer for the frontend."
      produces:
        - "application/json"
      responses:
        200:
          description: "Successfully fetched the footer."
          schema:
            $ref: '#/definitions/PublicFooterResponse'
        400:
          description: "Bad request due to missing or invalid parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized. The request is missing valid authentication."
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found. The requested resource could not be found."
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal server error."
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  principal:
    type: string
    description: "A unique identifier for a principal (user or entity)."
  PingResponse:
    type: object
    properties:
      message:
        type: string
        enum:
          - pong
        example: "pong"
        description: "Response message confirming successful server connectivity."
      timestamp:
        type: string
        format: date-time
        example: "2024-11-19T12:34:56Z"
        description: "The timestamp of the server response, useful for tracking latency."
  ErrorResponse:
    type: object
    properties:
      code:
        type: integer
        example: 500
        description: "HTTP status code representing the type of error encountered."
      message:
        type: string
        example: "Internal Server Error"
        description: "Brief explanation of the error encountered."
      details:
        type: string
        example: "Unexpected error while processing the request."
        description: "Additional context or information about the error, if available."
  PrometheusResponse:
    type: object
    additionalProperties:
      type: string
      format: number
  Contract:
    type: object
    properties:
      id:
        type: integer
        format: bigInt
      name:
        type: string
      address:
        type: string
      tx:
        type: string
      abi:
        type: string
  MarketplaceCollectible:
    type: object
    properties:
      id:
        type: integer
        format: bigInt
      attributes:
        type: object
        $ref: '#/definitions/MarketplaceCollectibleAttributes'
  MarketplaceCollectibleAttributes:
    type: object
    properties:
      itemId:
        type: integer
        format: bigInt
      tokenIds:
        type: array
        items:
          type: integer
          format: bigInt
      collectionId:
        type: integer
        format: bigInt
      uri:
        type: string
      owner:
        type: object
        $ref: "#/definitions/PublicUser"
      creator:
        type: object
        $ref: "#/definitions/PublicUser"
      metadata:
        $ref: "#/definitions/MarketplaceCollectibleMetadata"
      details:
        $ref: "#/definitions/MarketplaceCollectibleDetails"
  MarketplaceCollectibleMetadata:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      image:
        type: string
      external_url:
        type: string
      background_color:
        type: string
      animation_url:
        type: string
      youtube_url:
        type: string
      attributes:
        type: array
        items:
          $ref: "#/definitions/MetadataAttributes"
  Metadata:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      image:
        type: string
      external_url:
        type: string
      background_color:
        type: string
      animation_url:
        type: string
      youtube_url:
        type: string
      attributes:
        type: array
        items:
          $ref: "#/definitions/MetadataAttributes"
  MarketplaceCollectibleDetails:
    type: object
    properties:
      address:
        type: string
      collection:
        type: string
      tags:
        type: string
      fulfilled:
        type: boolean
      cancelled:
        type: boolean
      auction:
        type: boolean
      price:
        type: string
      price_wei:
        type: string
      fee:
        type: string
      fee_wei:
        type: string
      total:
        type: string
      total_wei:
        type: string
      start_time:
        type: integer
        format: int64
      end_time:
        type: integer
        format: int64
      start_price:
        type: string
      reserve_price:
        type: string
      start_price_wei:
        type: string
      reserve_price_wei:
        type: string
      is_started:
        type: boolean
      quantity:
        type: integer
        format: bigInt
  MetadataAttributes:
    type: object
    properties:
      trait_type:
        type: string
      value:
        type: string
  MarketplaceCollection:
    type: object
    properties:
      id:
        type: integer
        format: bigInt
      attributes:
        type: object
        $ref: '#/definitions/MarketplaceCollectionAttributes'
  MarketplaceCollectionAttributes:
    type: object
    properties:
      id:
        type: object
        x-go-type:
          type: Int
          import:
            package: math/big
          hints:
            kind: object
            noValidation: true
            nullable: true
      categoryId:
        type: integer
        format: bigInt
      address:
        type: object
        x-go-type:
          type: Address
          import:
            package: github.com/ethereum/go-ethereum/common
          hints:
            kind: object
            noValidation: true
      name:
        type: string
      symbol:
        type: string
      description:
        type: string
      slug:
        type: string
      fee:
        type: string
      maxItems:
        type: integer
        format: bigInt  
      owner:
        type: object
        $ref: "#/definitions/PublicUser"
      creator:
        type: object
        $ref: "#/definitions/PublicUser"
      logo:
        $ref: '#/definitions/PublicFile'
      featured:
        $ref: '#/definitions/PublicFile'
      banner:
        $ref: '#/definitions/PublicFile'
      isApproved:
        type: boolean
      isLocked:
        type: boolean
      url:
        type: string
      created:
        type: string
      collectibles:
        type: array
        items:
          $ref: "#/definitions/MarketplaceCollectible"
  PublicUser:
    type: object
    properties:
      id:
        type: integer
        format: bigInt
      uuid:
        type: string
      username:
        type: string
      email:
        type: string
      gravatar:
        type: string
      token:
        type: string
      address:
        type: string
      nonce:
        type: string
      wallpaperId:
        type: integer
        format: bigInt
      wallpaper:
        type: string
      funds:
        type: string
      created:
        type: string
  PublicFile:
    properties:
      id:
        type: integer
        format: bigInt
      attributes:
        type: object
        properties:
          name:
            type: string
          alt:
            type: string
          caption:
            type: string
          width:
            type: integer
          height:
            type: integer
          hash:
            type: string
          ext:
            type: string
          mime:
            type: string
          size:
            type: number
          url:
            type: string
          provider:
            type: string
  # frontend definitions
  PublicHeaderResponse:
    type: object
    properties:
      menu:
        $ref: '#/definitions/PublicMenu'
  PublicFooterResponse:
    type: object
    properties:
      menu:
        $ref: '#/definitions/PublicMenu'
  PublicMenu:
    type: object
    properties:
      id:
        type: integer
        format: bigInt
      attributes:
        type: object
        $ref: '#/definitions/PublicMenuAttributes'
  PublicMenuAttributes:
    type: object
    properties:
      orderBy:
        type: integer
        format: bigInt
      name:
        type: string
      link:
        type: string
      items:
        type: array
        items:
          $ref: "#/definitions/PublicMenu"
tags:
  - name: Frontend
    description: "Endpoints accessible to all clients for frontend API functionality."
  - name: Public
    description: "Endpoints accessible to all clients for general API functionality."
  - name: Monitoring 
    description: "Endpoints accessible to all clients for monitoring API functionality."
