// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: frontend/v1/collection.proto

package frontendv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarketplaceCollection struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Attributes    *MarketplaceCollectionAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	Id            int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	sizeCache     protoimpl.SizeCache
}

func (x *MarketplaceCollection) Reset() {
	*x = MarketplaceCollection{}
	mi := &file_frontend_v1_collection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketplaceCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketplaceCollection) ProtoMessage() {}

func (x *MarketplaceCollection) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_v1_collection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketplaceCollection.ProtoReflect.Descriptor instead.
func (*MarketplaceCollection) Descriptor() ([]byte, []int) {
	return file_frontend_v1_collection_proto_rawDescGZIP(), []int{0}
}

func (x *MarketplaceCollection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MarketplaceCollection) GetAttributes() *MarketplaceCollectionAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type MarketplaceCollectionAttributes struct {
	Logo          *PublicFile            `protobuf:"bytes,12,opt,name=logo,proto3" json:"logo,omitempty"`
	Owner         *PublicUser            `protobuf:"bytes,16,opt,name=owner,proto3" json:"owner,omitempty"`
	Creator       *PublicUser            `protobuf:"bytes,15,opt,name=creator,proto3" json:"creator,omitempty"`
	Featured      *PublicFile            `protobuf:"bytes,14,opt,name=featured,proto3" json:"featured,omitempty"`
	Banner        *PublicFile            `protobuf:"bytes,13,opt,name=banner,proto3" json:"banner,omitempty"`
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Fee           string                 `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Address       string                 `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	Created       string                 `protobuf:"bytes,17,opt,name=created,proto3" json:"created,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	Collectibles  []*MarketplaceCollectible `protobuf:"bytes,18,rep,name=collectibles,proto3" json:"collectibles,omitempty"`
	CategoryId    int64                     `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	MaxItems      int64                     `protobuf:"varint,9,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	sizeCache     protoimpl.SizeCache
	IsLocked      bool `protobuf:"varint,11,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
	IsApproved    bool `protobuf:"varint,10,opt,name=is_approved,json=isApproved,proto3" json:"is_approved,omitempty"`
}

func (x *MarketplaceCollectionAttributes) Reset() {
	*x = MarketplaceCollectionAttributes{}
	mi := &file_frontend_v1_collection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketplaceCollectionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketplaceCollectionAttributes) ProtoMessage() {}

func (x *MarketplaceCollectionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_v1_collection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketplaceCollectionAttributes.ProtoReflect.Descriptor instead.
func (*MarketplaceCollectionAttributes) Descriptor() ([]byte, []int) {
	return file_frontend_v1_collection_proto_rawDescGZIP(), []int{1}
}

func (x *MarketplaceCollectionAttributes) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *MarketplaceCollectionAttributes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarketplaceCollectionAttributes) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *MarketplaceCollectionAttributes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MarketplaceCollectionAttributes) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MarketplaceCollectionAttributes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MarketplaceCollectionAttributes) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *MarketplaceCollectionAttributes) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MarketplaceCollectionAttributes) GetMaxItems() int64 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *MarketplaceCollectionAttributes) GetIsApproved() bool {
	if x != nil {
		return x.IsApproved
	}
	return false
}

func (x *MarketplaceCollectionAttributes) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *MarketplaceCollectionAttributes) GetLogo() *PublicFile {
	if x != nil {
		return x.Logo
	}
	return nil
}

func (x *MarketplaceCollectionAttributes) GetBanner() *PublicFile {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *MarketplaceCollectionAttributes) GetFeatured() *PublicFile {
	if x != nil {
		return x.Featured
	}
	return nil
}

func (x *MarketplaceCollectionAttributes) GetCreator() *PublicUser {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *MarketplaceCollectionAttributes) GetOwner() *PublicUser {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *MarketplaceCollectionAttributes) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *MarketplaceCollectionAttributes) GetCollectibles() []*MarketplaceCollectible {
	if x != nil {
		return x.Collectibles
	}
	return nil
}

var File_frontend_v1_collection_proto protoreflect.FileDescriptor

var file_frontend_v1_collection_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x15, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x22, 0x95, 0x05, 0x0a, 0x1f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x2f,
	0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x47, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x73, 0x42, 0xab, 0x01, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x65,
	0x2d, 0x6c, 0x61, 0x72, 0x73, 0x65, 0x6e, 0x2f, 0x70, 0x6c, 0x75, 0x74, 0x6f, 0x6e, 0x69, 0x75,
	0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x76,
	0x31, 0x3b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x46,
	0x58, 0x58, 0xaa, 0x02, 0x0b, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0b, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x17, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_frontend_v1_collection_proto_rawDescOnce sync.Once
	file_frontend_v1_collection_proto_rawDescData []byte
)

func file_frontend_v1_collection_proto_rawDescGZIP() []byte {
	file_frontend_v1_collection_proto_rawDescOnce.Do(func() {
		file_frontend_v1_collection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_frontend_v1_collection_proto_rawDesc), len(file_frontend_v1_collection_proto_rawDesc)))
	})
	return file_frontend_v1_collection_proto_rawDescData
}

var file_frontend_v1_collection_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_frontend_v1_collection_proto_goTypes = []any{
	(*MarketplaceCollection)(nil),           // 0: frontend.v1.MarketplaceCollection
	(*MarketplaceCollectionAttributes)(nil), // 1: frontend.v1.MarketplaceCollectionAttributes
	(*PublicFile)(nil),                      // 2: frontend.v1.PublicFile
	(*PublicUser)(nil),                      // 3: frontend.v1.PublicUser
	(*MarketplaceCollectible)(nil),          // 4: frontend.v1.MarketplaceCollectible
}
var file_frontend_v1_collection_proto_depIdxs = []int32{
	1, // 0: frontend.v1.MarketplaceCollection.attributes:type_name -> frontend.v1.MarketplaceCollectionAttributes
	2, // 1: frontend.v1.MarketplaceCollectionAttributes.logo:type_name -> frontend.v1.PublicFile
	2, // 2: frontend.v1.MarketplaceCollectionAttributes.banner:type_name -> frontend.v1.PublicFile
	2, // 3: frontend.v1.MarketplaceCollectionAttributes.featured:type_name -> frontend.v1.PublicFile
	3, // 4: frontend.v1.MarketplaceCollectionAttributes.creator:type_name -> frontend.v1.PublicUser
	3, // 5: frontend.v1.MarketplaceCollectionAttributes.owner:type_name -> frontend.v1.PublicUser
	4, // 6: frontend.v1.MarketplaceCollectionAttributes.collectibles:type_name -> frontend.v1.MarketplaceCollectible
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_frontend_v1_collection_proto_init() }
func file_frontend_v1_collection_proto_init() {
	if File_frontend_v1_collection_proto != nil {
		return
	}
	file_frontend_v1_file_proto_init()
	file_frontend_v1_user_proto_init()
	file_frontend_v1_collectible_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_frontend_v1_collection_proto_rawDesc), len(file_frontend_v1_collection_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frontend_v1_collection_proto_goTypes,
		DependencyIndexes: file_frontend_v1_collection_proto_depIdxs,
		MessageInfos:      file_frontend_v1_collection_proto_msgTypes,
	}.Build()
	File_frontend_v1_collection_proto = out.File
	file_frontend_v1_collection_proto_goTypes = nil
	file_frontend_v1_collection_proto_depIdxs = nil
}
