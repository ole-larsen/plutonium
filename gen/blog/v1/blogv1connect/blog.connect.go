// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: blog/v1/blog.proto

package blogv1connect

import (
	connect "connectrpc.com/connect"
	_ "github.com/ole-larsen/plutonium/gen/blog/v1"
	http "net/http"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// BlogServiceName is the fully-qualified name of the BlogService service.
	BlogServiceName = "blog.v1.BlogService"
)

// BlogServiceClient is a client for the blog.v1.BlogService service.
type BlogServiceClient interface {
}

// NewBlogServiceClient constructs a client for the blog.v1.BlogService service. By default, it uses
// the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and sends
// uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewBlogServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) BlogServiceClient {
	return &blogServiceClient{}
}

// blogServiceClient implements BlogServiceClient.
type blogServiceClient struct {
}

// BlogServiceHandler is an implementation of the blog.v1.BlogService service.
type BlogServiceHandler interface {
}

// NewBlogServiceHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewBlogServiceHandler(svc BlogServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	return "/blog.v1.BlogService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedBlogServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedBlogServiceHandler struct{}
