// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// GetFrontendAuthCallbackOKCode is the HTTP code returned for type GetFrontendAuthCallbackOK
const GetFrontendAuthCallbackOKCode int = 200

/*
GetFrontendAuthCallbackOK callback from oauth

swagger:response getFrontendAuthCallbackOK
*/
type GetFrontendAuthCallbackOK struct {

	/*
	  In: Body
	*/
	Payload *models.Callback `json:"body,omitempty"`
}

// NewGetFrontendAuthCallbackOK creates GetFrontendAuthCallbackOK with default headers values
func NewGetFrontendAuthCallbackOK() *GetFrontendAuthCallbackOK {

	return &GetFrontendAuthCallbackOK{}
}

// WithPayload adds the payload to the get frontend auth callback o k response
func (o *GetFrontendAuthCallbackOK) WithPayload(payload *models.Callback) *GetFrontendAuthCallbackOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend auth callback o k response
func (o *GetFrontendAuthCallbackOK) SetPayload(payload *models.Callback) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendAuthCallbackOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendAuthCallbackBadRequestCode is the HTTP code returned for type GetFrontendAuthCallbackBadRequest
const GetFrontendAuthCallbackBadRequestCode int = 400

/*
GetFrontendAuthCallbackBadRequest Bad request due to missing or invalid parameters.

swagger:response getFrontendAuthCallbackBadRequest
*/
type GetFrontendAuthCallbackBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendAuthCallbackBadRequest creates GetFrontendAuthCallbackBadRequest with default headers values
func NewGetFrontendAuthCallbackBadRequest() *GetFrontendAuthCallbackBadRequest {

	return &GetFrontendAuthCallbackBadRequest{}
}

// WithPayload adds the payload to the get frontend auth callback bad request response
func (o *GetFrontendAuthCallbackBadRequest) WithPayload(payload *models.ErrorResponse) *GetFrontendAuthCallbackBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend auth callback bad request response
func (o *GetFrontendAuthCallbackBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendAuthCallbackBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendAuthCallbackUnauthorizedCode is the HTTP code returned for type GetFrontendAuthCallbackUnauthorized
const GetFrontendAuthCallbackUnauthorizedCode int = 401

/*
GetFrontendAuthCallbackUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response getFrontendAuthCallbackUnauthorized
*/
type GetFrontendAuthCallbackUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendAuthCallbackUnauthorized creates GetFrontendAuthCallbackUnauthorized with default headers values
func NewGetFrontendAuthCallbackUnauthorized() *GetFrontendAuthCallbackUnauthorized {

	return &GetFrontendAuthCallbackUnauthorized{}
}

// WithPayload adds the payload to the get frontend auth callback unauthorized response
func (o *GetFrontendAuthCallbackUnauthorized) WithPayload(payload *models.ErrorResponse) *GetFrontendAuthCallbackUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend auth callback unauthorized response
func (o *GetFrontendAuthCallbackUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendAuthCallbackUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendAuthCallbackNotFoundCode is the HTTP code returned for type GetFrontendAuthCallbackNotFound
const GetFrontendAuthCallbackNotFoundCode int = 404

/*
GetFrontendAuthCallbackNotFound Not found. The requested resource could not be found.

swagger:response getFrontendAuthCallbackNotFound
*/
type GetFrontendAuthCallbackNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendAuthCallbackNotFound creates GetFrontendAuthCallbackNotFound with default headers values
func NewGetFrontendAuthCallbackNotFound() *GetFrontendAuthCallbackNotFound {

	return &GetFrontendAuthCallbackNotFound{}
}

// WithPayload adds the payload to the get frontend auth callback not found response
func (o *GetFrontendAuthCallbackNotFound) WithPayload(payload *models.ErrorResponse) *GetFrontendAuthCallbackNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend auth callback not found response
func (o *GetFrontendAuthCallbackNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendAuthCallbackNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendAuthCallbackInternalServerErrorCode is the HTTP code returned for type GetFrontendAuthCallbackInternalServerError
const GetFrontendAuthCallbackInternalServerErrorCode int = 500

/*
GetFrontendAuthCallbackInternalServerError Internal server error.

swagger:response getFrontendAuthCallbackInternalServerError
*/
type GetFrontendAuthCallbackInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendAuthCallbackInternalServerError creates GetFrontendAuthCallbackInternalServerError with default headers values
func NewGetFrontendAuthCallbackInternalServerError() *GetFrontendAuthCallbackInternalServerError {

	return &GetFrontendAuthCallbackInternalServerError{}
}

// WithPayload adds the payload to the get frontend auth callback internal server error response
func (o *GetFrontendAuthCallbackInternalServerError) WithPayload(payload *models.ErrorResponse) *GetFrontendAuthCallbackInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend auth callback internal server error response
func (o *GetFrontendAuthCallbackInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendAuthCallbackInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
