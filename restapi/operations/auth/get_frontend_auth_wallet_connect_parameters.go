// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
)

// NewGetFrontendAuthWalletConnectParams creates a new GetFrontendAuthWalletConnectParams object
//
// There are no default values defined in the spec.
func NewGetFrontendAuthWalletConnectParams() GetFrontendAuthWalletConnectParams {

	return GetFrontendAuthWalletConnectParams{}
}

// GetFrontendAuthWalletConnectParams contains all the bound params for the get frontend auth wallet connect operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetFrontendAuthWalletConnect
type GetFrontendAuthWalletConnectParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*public address
	  In: query
	*/
	Address *string
	/*operation type
	  In: query
	*/
	Operation *string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetFrontendAuthWalletConnectParams() beforehand.
func (o *GetFrontendAuthWalletConnectParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qAddress, qhkAddress, _ := qs.GetOK("address")
	if err := o.bindAddress(qAddress, qhkAddress, route.Formats); err != nil {
		res = append(res, err)
	}

	qOperation, qhkOperation, _ := qs.GetOK("operation")
	if err := o.bindOperation(qOperation, qhkOperation, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindAddress binds and validates parameter Address from query.
func (o *GetFrontendAuthWalletConnectParams) bindAddress(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}
	o.Address = &raw

	return nil
}

// bindOperation binds and validates parameter Operation from query.
func (o *GetFrontendAuthWalletConnectParams) bindOperation(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}
	o.Operation = &raw

	return nil
}
