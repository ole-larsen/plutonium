// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// PostFrontendAuthWalletConnectOKCode is the HTTP code returned for type PostFrontendAuthWalletConnectOK
const PostFrontendAuthWalletConnectOKCode int = 200

/*
PostFrontendAuthWalletConnectOK auth using signature verification

swagger:response postFrontendAuthWalletConnectOK
*/
type PostFrontendAuthWalletConnectOK struct {

	/*
	  In: Body
	*/
	Payload *models.LoginMetamaskOK `json:"body,omitempty"`
}

// NewPostFrontendAuthWalletConnectOK creates PostFrontendAuthWalletConnectOK with default headers values
func NewPostFrontendAuthWalletConnectOK() *PostFrontendAuthWalletConnectOK {

	return &PostFrontendAuthWalletConnectOK{}
}

// WithPayload adds the payload to the post frontend auth wallet connect o k response
func (o *PostFrontendAuthWalletConnectOK) WithPayload(payload *models.LoginMetamaskOK) *PostFrontendAuthWalletConnectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post frontend auth wallet connect o k response
func (o *PostFrontendAuthWalletConnectOK) SetPayload(payload *models.LoginMetamaskOK) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFrontendAuthWalletConnectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostFrontendAuthWalletConnectBadRequestCode is the HTTP code returned for type PostFrontendAuthWalletConnectBadRequest
const PostFrontendAuthWalletConnectBadRequestCode int = 400

/*
PostFrontendAuthWalletConnectBadRequest Bad request due to missing or invalid parameters.

swagger:response postFrontendAuthWalletConnectBadRequest
*/
type PostFrontendAuthWalletConnectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostFrontendAuthWalletConnectBadRequest creates PostFrontendAuthWalletConnectBadRequest with default headers values
func NewPostFrontendAuthWalletConnectBadRequest() *PostFrontendAuthWalletConnectBadRequest {

	return &PostFrontendAuthWalletConnectBadRequest{}
}

// WithPayload adds the payload to the post frontend auth wallet connect bad request response
func (o *PostFrontendAuthWalletConnectBadRequest) WithPayload(payload *models.ErrorResponse) *PostFrontendAuthWalletConnectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post frontend auth wallet connect bad request response
func (o *PostFrontendAuthWalletConnectBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFrontendAuthWalletConnectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostFrontendAuthWalletConnectUnauthorizedCode is the HTTP code returned for type PostFrontendAuthWalletConnectUnauthorized
const PostFrontendAuthWalletConnectUnauthorizedCode int = 401

/*
PostFrontendAuthWalletConnectUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response postFrontendAuthWalletConnectUnauthorized
*/
type PostFrontendAuthWalletConnectUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostFrontendAuthWalletConnectUnauthorized creates PostFrontendAuthWalletConnectUnauthorized with default headers values
func NewPostFrontendAuthWalletConnectUnauthorized() *PostFrontendAuthWalletConnectUnauthorized {

	return &PostFrontendAuthWalletConnectUnauthorized{}
}

// WithPayload adds the payload to the post frontend auth wallet connect unauthorized response
func (o *PostFrontendAuthWalletConnectUnauthorized) WithPayload(payload *models.ErrorResponse) *PostFrontendAuthWalletConnectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post frontend auth wallet connect unauthorized response
func (o *PostFrontendAuthWalletConnectUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFrontendAuthWalletConnectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostFrontendAuthWalletConnectNotFoundCode is the HTTP code returned for type PostFrontendAuthWalletConnectNotFound
const PostFrontendAuthWalletConnectNotFoundCode int = 404

/*
PostFrontendAuthWalletConnectNotFound Not found. The requested resource could not be found.

swagger:response postFrontendAuthWalletConnectNotFound
*/
type PostFrontendAuthWalletConnectNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostFrontendAuthWalletConnectNotFound creates PostFrontendAuthWalletConnectNotFound with default headers values
func NewPostFrontendAuthWalletConnectNotFound() *PostFrontendAuthWalletConnectNotFound {

	return &PostFrontendAuthWalletConnectNotFound{}
}

// WithPayload adds the payload to the post frontend auth wallet connect not found response
func (o *PostFrontendAuthWalletConnectNotFound) WithPayload(payload *models.ErrorResponse) *PostFrontendAuthWalletConnectNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post frontend auth wallet connect not found response
func (o *PostFrontendAuthWalletConnectNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFrontendAuthWalletConnectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostFrontendAuthWalletConnectInternalServerErrorCode is the HTTP code returned for type PostFrontendAuthWalletConnectInternalServerError
const PostFrontendAuthWalletConnectInternalServerErrorCode int = 500

/*
PostFrontendAuthWalletConnectInternalServerError Internal server error.

swagger:response postFrontendAuthWalletConnectInternalServerError
*/
type PostFrontendAuthWalletConnectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostFrontendAuthWalletConnectInternalServerError creates PostFrontendAuthWalletConnectInternalServerError with default headers values
func NewPostFrontendAuthWalletConnectInternalServerError() *PostFrontendAuthWalletConnectInternalServerError {

	return &PostFrontendAuthWalletConnectInternalServerError{}
}

// WithPayload adds the payload to the post frontend auth wallet connect internal server error response
func (o *PostFrontendAuthWalletConnectInternalServerError) WithPayload(payload *models.ErrorResponse) *PostFrontendAuthWalletConnectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post frontend auth wallet connect internal server error response
func (o *PostFrontendAuthWalletConnectInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFrontendAuthWalletConnectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
