// Code generated by go-swagger; DO NOT EDIT.

package frontend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// GetFrontendBlogOKCode is the HTTP code returned for type GetFrontendBlogOK
const GetFrontendBlogOKCode int = 200

/*
GetFrontendBlogOK ok

swagger:response getFrontendBlogOK
*/
type GetFrontendBlogOK struct {

	/*
	  In: Body
	*/
	Payload []*models.PublicBlogItem `json:"body,omitempty"`
}

// NewGetFrontendBlogOK creates GetFrontendBlogOK with default headers values
func NewGetFrontendBlogOK() *GetFrontendBlogOK {

	return &GetFrontendBlogOK{}
}

// WithPayload adds the payload to the get frontend blog o k response
func (o *GetFrontendBlogOK) WithPayload(payload []*models.PublicBlogItem) *GetFrontendBlogOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog o k response
func (o *GetFrontendBlogOK) SetPayload(payload []*models.PublicBlogItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.PublicBlogItem, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFrontendBlogBadRequestCode is the HTTP code returned for type GetFrontendBlogBadRequest
const GetFrontendBlogBadRequestCode int = 400

/*
GetFrontendBlogBadRequest Bad request due to missing or invalid parameters.

swagger:response getFrontendBlogBadRequest
*/
type GetFrontendBlogBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendBlogBadRequest creates GetFrontendBlogBadRequest with default headers values
func NewGetFrontendBlogBadRequest() *GetFrontendBlogBadRequest {

	return &GetFrontendBlogBadRequest{}
}

// WithPayload adds the payload to the get frontend blog bad request response
func (o *GetFrontendBlogBadRequest) WithPayload(payload *models.ErrorResponse) *GetFrontendBlogBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog bad request response
func (o *GetFrontendBlogBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendBlogUnauthorizedCode is the HTTP code returned for type GetFrontendBlogUnauthorized
const GetFrontendBlogUnauthorizedCode int = 401

/*
GetFrontendBlogUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response getFrontendBlogUnauthorized
*/
type GetFrontendBlogUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendBlogUnauthorized creates GetFrontendBlogUnauthorized with default headers values
func NewGetFrontendBlogUnauthorized() *GetFrontendBlogUnauthorized {

	return &GetFrontendBlogUnauthorized{}
}

// WithPayload adds the payload to the get frontend blog unauthorized response
func (o *GetFrontendBlogUnauthorized) WithPayload(payload *models.ErrorResponse) *GetFrontendBlogUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog unauthorized response
func (o *GetFrontendBlogUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendBlogNotFoundCode is the HTTP code returned for type GetFrontendBlogNotFound
const GetFrontendBlogNotFoundCode int = 404

/*
GetFrontendBlogNotFound Not found. The requested resource could not be found.

swagger:response getFrontendBlogNotFound
*/
type GetFrontendBlogNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendBlogNotFound creates GetFrontendBlogNotFound with default headers values
func NewGetFrontendBlogNotFound() *GetFrontendBlogNotFound {

	return &GetFrontendBlogNotFound{}
}

// WithPayload adds the payload to the get frontend blog not found response
func (o *GetFrontendBlogNotFound) WithPayload(payload *models.ErrorResponse) *GetFrontendBlogNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog not found response
func (o *GetFrontendBlogNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendBlogInternalServerErrorCode is the HTTP code returned for type GetFrontendBlogInternalServerError
const GetFrontendBlogInternalServerErrorCode int = 500

/*
GetFrontendBlogInternalServerError Internal server error.

swagger:response getFrontendBlogInternalServerError
*/
type GetFrontendBlogInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendBlogInternalServerError creates GetFrontendBlogInternalServerError with default headers values
func NewGetFrontendBlogInternalServerError() *GetFrontendBlogInternalServerError {

	return &GetFrontendBlogInternalServerError{}
}

// WithPayload adds the payload to the get frontend blog internal server error response
func (o *GetFrontendBlogInternalServerError) WithPayload(payload *models.ErrorResponse) *GetFrontendBlogInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog internal server error response
func (o *GetFrontendBlogInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
