// Code generated by go-swagger; DO NOT EDIT.

package frontend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// GetFrontendContractsOKCode is the HTTP code returned for type GetFrontendContractsOK
const GetFrontendContractsOKCode int = 200

/*
GetFrontendContractsOK ok

swagger:response getFrontendContractsOK
*/
type GetFrontendContractsOK struct {

	/*
	  In: Body
	*/
	Payload *models.PublicContracts `json:"body,omitempty"`
}

// NewGetFrontendContractsOK creates GetFrontendContractsOK with default headers values
func NewGetFrontendContractsOK() *GetFrontendContractsOK {

	return &GetFrontendContractsOK{}
}

// WithPayload adds the payload to the get frontend contracts o k response
func (o *GetFrontendContractsOK) WithPayload(payload *models.PublicContracts) *GetFrontendContractsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend contracts o k response
func (o *GetFrontendContractsOK) SetPayload(payload *models.PublicContracts) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendContractsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendContractsBadRequestCode is the HTTP code returned for type GetFrontendContractsBadRequest
const GetFrontendContractsBadRequestCode int = 400

/*
GetFrontendContractsBadRequest Bad request due to missing or invalid parameters.

swagger:response getFrontendContractsBadRequest
*/
type GetFrontendContractsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendContractsBadRequest creates GetFrontendContractsBadRequest with default headers values
func NewGetFrontendContractsBadRequest() *GetFrontendContractsBadRequest {

	return &GetFrontendContractsBadRequest{}
}

// WithPayload adds the payload to the get frontend contracts bad request response
func (o *GetFrontendContractsBadRequest) WithPayload(payload *models.ErrorResponse) *GetFrontendContractsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend contracts bad request response
func (o *GetFrontendContractsBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendContractsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendContractsUnauthorizedCode is the HTTP code returned for type GetFrontendContractsUnauthorized
const GetFrontendContractsUnauthorizedCode int = 401

/*
GetFrontendContractsUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response getFrontendContractsUnauthorized
*/
type GetFrontendContractsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendContractsUnauthorized creates GetFrontendContractsUnauthorized with default headers values
func NewGetFrontendContractsUnauthorized() *GetFrontendContractsUnauthorized {

	return &GetFrontendContractsUnauthorized{}
}

// WithPayload adds the payload to the get frontend contracts unauthorized response
func (o *GetFrontendContractsUnauthorized) WithPayload(payload *models.ErrorResponse) *GetFrontendContractsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend contracts unauthorized response
func (o *GetFrontendContractsUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendContractsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendContractsNotFoundCode is the HTTP code returned for type GetFrontendContractsNotFound
const GetFrontendContractsNotFoundCode int = 404

/*
GetFrontendContractsNotFound Not found. The requested resource could not be found.

swagger:response getFrontendContractsNotFound
*/
type GetFrontendContractsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendContractsNotFound creates GetFrontendContractsNotFound with default headers values
func NewGetFrontendContractsNotFound() *GetFrontendContractsNotFound {

	return &GetFrontendContractsNotFound{}
}

// WithPayload adds the payload to the get frontend contracts not found response
func (o *GetFrontendContractsNotFound) WithPayload(payload *models.ErrorResponse) *GetFrontendContractsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend contracts not found response
func (o *GetFrontendContractsNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendContractsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendContractsInternalServerErrorCode is the HTTP code returned for type GetFrontendContractsInternalServerError
const GetFrontendContractsInternalServerErrorCode int = 500

/*
GetFrontendContractsInternalServerError Internal server error.

swagger:response getFrontendContractsInternalServerError
*/
type GetFrontendContractsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendContractsInternalServerError creates GetFrontendContractsInternalServerError with default headers values
func NewGetFrontendContractsInternalServerError() *GetFrontendContractsInternalServerError {

	return &GetFrontendContractsInternalServerError{}
}

// WithPayload adds the payload to the get frontend contracts internal server error response
func (o *GetFrontendContractsInternalServerError) WithPayload(payload *models.ErrorResponse) *GetFrontendContractsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend contracts internal server error response
func (o *GetFrontendContractsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendContractsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
