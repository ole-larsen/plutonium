// Code generated by go-swagger; DO NOT EDIT.

package frontend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// GetFrontendHelpCenterOKCode is the HTTP code returned for type GetFrontendHelpCenterOK
const GetFrontendHelpCenterOKCode int = 200

/*
GetFrontendHelpCenterOK ok

swagger:response getFrontendHelpCenterOK
*/
type GetFrontendHelpCenterOK struct {

	/*
	  In: Body
	*/
	Payload []*models.PublicHelpCenterItem `json:"body,omitempty"`
}

// NewGetFrontendHelpCenterOK creates GetFrontendHelpCenterOK with default headers values
func NewGetFrontendHelpCenterOK() *GetFrontendHelpCenterOK {

	return &GetFrontendHelpCenterOK{}
}

// WithPayload adds the payload to the get frontend help center o k response
func (o *GetFrontendHelpCenterOK) WithPayload(payload []*models.PublicHelpCenterItem) *GetFrontendHelpCenterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend help center o k response
func (o *GetFrontendHelpCenterOK) SetPayload(payload []*models.PublicHelpCenterItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHelpCenterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.PublicHelpCenterItem, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFrontendHelpCenterBadRequestCode is the HTTP code returned for type GetFrontendHelpCenterBadRequest
const GetFrontendHelpCenterBadRequestCode int = 400

/*
GetFrontendHelpCenterBadRequest Bad request due to missing or invalid parameters.

swagger:response getFrontendHelpCenterBadRequest
*/
type GetFrontendHelpCenterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendHelpCenterBadRequest creates GetFrontendHelpCenterBadRequest with default headers values
func NewGetFrontendHelpCenterBadRequest() *GetFrontendHelpCenterBadRequest {

	return &GetFrontendHelpCenterBadRequest{}
}

// WithPayload adds the payload to the get frontend help center bad request response
func (o *GetFrontendHelpCenterBadRequest) WithPayload(payload *models.ErrorResponse) *GetFrontendHelpCenterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend help center bad request response
func (o *GetFrontendHelpCenterBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHelpCenterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendHelpCenterUnauthorizedCode is the HTTP code returned for type GetFrontendHelpCenterUnauthorized
const GetFrontendHelpCenterUnauthorizedCode int = 401

/*
GetFrontendHelpCenterUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response getFrontendHelpCenterUnauthorized
*/
type GetFrontendHelpCenterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendHelpCenterUnauthorized creates GetFrontendHelpCenterUnauthorized with default headers values
func NewGetFrontendHelpCenterUnauthorized() *GetFrontendHelpCenterUnauthorized {

	return &GetFrontendHelpCenterUnauthorized{}
}

// WithPayload adds the payload to the get frontend help center unauthorized response
func (o *GetFrontendHelpCenterUnauthorized) WithPayload(payload *models.ErrorResponse) *GetFrontendHelpCenterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend help center unauthorized response
func (o *GetFrontendHelpCenterUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHelpCenterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendHelpCenterNotFoundCode is the HTTP code returned for type GetFrontendHelpCenterNotFound
const GetFrontendHelpCenterNotFoundCode int = 404

/*
GetFrontendHelpCenterNotFound Not found. The requested resource could not be found.

swagger:response getFrontendHelpCenterNotFound
*/
type GetFrontendHelpCenterNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendHelpCenterNotFound creates GetFrontendHelpCenterNotFound with default headers values
func NewGetFrontendHelpCenterNotFound() *GetFrontendHelpCenterNotFound {

	return &GetFrontendHelpCenterNotFound{}
}

// WithPayload adds the payload to the get frontend help center not found response
func (o *GetFrontendHelpCenterNotFound) WithPayload(payload *models.ErrorResponse) *GetFrontendHelpCenterNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend help center not found response
func (o *GetFrontendHelpCenterNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHelpCenterNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendHelpCenterInternalServerErrorCode is the HTTP code returned for type GetFrontendHelpCenterInternalServerError
const GetFrontendHelpCenterInternalServerErrorCode int = 500

/*
GetFrontendHelpCenterInternalServerError Internal server error.

swagger:response getFrontendHelpCenterInternalServerError
*/
type GetFrontendHelpCenterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendHelpCenterInternalServerError creates GetFrontendHelpCenterInternalServerError with default headers values
func NewGetFrontendHelpCenterInternalServerError() *GetFrontendHelpCenterInternalServerError {

	return &GetFrontendHelpCenterInternalServerError{}
}

// WithPayload adds the payload to the get frontend help center internal server error response
func (o *GetFrontendHelpCenterInternalServerError) WithPayload(payload *models.ErrorResponse) *GetFrontendHelpCenterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend help center internal server error response
func (o *GetFrontendHelpCenterInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHelpCenterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
