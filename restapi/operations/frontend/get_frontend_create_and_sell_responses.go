// Code generated by go-swagger; DO NOT EDIT.

package frontend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// GetFrontendCreateAndSellOKCode is the HTTP code returned for type GetFrontendCreateAndSellOK
const GetFrontendCreateAndSellOKCode int = 200

/*
GetFrontendCreateAndSellOK ok

swagger:response getFrontendCreateAndSellOK
*/
type GetFrontendCreateAndSellOK struct {

	/*
	  In: Body
	*/
	Payload []*models.PublicCreateAndSellItem `json:"body,omitempty"`
}

// NewGetFrontendCreateAndSellOK creates GetFrontendCreateAndSellOK with default headers values
func NewGetFrontendCreateAndSellOK() *GetFrontendCreateAndSellOK {

	return &GetFrontendCreateAndSellOK{}
}

// WithPayload adds the payload to the get frontend create and sell o k response
func (o *GetFrontendCreateAndSellOK) WithPayload(payload []*models.PublicCreateAndSellItem) *GetFrontendCreateAndSellOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend create and sell o k response
func (o *GetFrontendCreateAndSellOK) SetPayload(payload []*models.PublicCreateAndSellItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendCreateAndSellOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.PublicCreateAndSellItem, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFrontendCreateAndSellBadRequestCode is the HTTP code returned for type GetFrontendCreateAndSellBadRequest
const GetFrontendCreateAndSellBadRequestCode int = 400

/*
GetFrontendCreateAndSellBadRequest Bad request due to missing or invalid parameters.

swagger:response getFrontendCreateAndSellBadRequest
*/
type GetFrontendCreateAndSellBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendCreateAndSellBadRequest creates GetFrontendCreateAndSellBadRequest with default headers values
func NewGetFrontendCreateAndSellBadRequest() *GetFrontendCreateAndSellBadRequest {

	return &GetFrontendCreateAndSellBadRequest{}
}

// WithPayload adds the payload to the get frontend create and sell bad request response
func (o *GetFrontendCreateAndSellBadRequest) WithPayload(payload *models.ErrorResponse) *GetFrontendCreateAndSellBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend create and sell bad request response
func (o *GetFrontendCreateAndSellBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendCreateAndSellBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendCreateAndSellUnauthorizedCode is the HTTP code returned for type GetFrontendCreateAndSellUnauthorized
const GetFrontendCreateAndSellUnauthorizedCode int = 401

/*
GetFrontendCreateAndSellUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response getFrontendCreateAndSellUnauthorized
*/
type GetFrontendCreateAndSellUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendCreateAndSellUnauthorized creates GetFrontendCreateAndSellUnauthorized with default headers values
func NewGetFrontendCreateAndSellUnauthorized() *GetFrontendCreateAndSellUnauthorized {

	return &GetFrontendCreateAndSellUnauthorized{}
}

// WithPayload adds the payload to the get frontend create and sell unauthorized response
func (o *GetFrontendCreateAndSellUnauthorized) WithPayload(payload *models.ErrorResponse) *GetFrontendCreateAndSellUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend create and sell unauthorized response
func (o *GetFrontendCreateAndSellUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendCreateAndSellUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendCreateAndSellNotFoundCode is the HTTP code returned for type GetFrontendCreateAndSellNotFound
const GetFrontendCreateAndSellNotFoundCode int = 404

/*
GetFrontendCreateAndSellNotFound Not found. The requested resource could not be found.

swagger:response getFrontendCreateAndSellNotFound
*/
type GetFrontendCreateAndSellNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendCreateAndSellNotFound creates GetFrontendCreateAndSellNotFound with default headers values
func NewGetFrontendCreateAndSellNotFound() *GetFrontendCreateAndSellNotFound {

	return &GetFrontendCreateAndSellNotFound{}
}

// WithPayload adds the payload to the get frontend create and sell not found response
func (o *GetFrontendCreateAndSellNotFound) WithPayload(payload *models.ErrorResponse) *GetFrontendCreateAndSellNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend create and sell not found response
func (o *GetFrontendCreateAndSellNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendCreateAndSellNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendCreateAndSellInternalServerErrorCode is the HTTP code returned for type GetFrontendCreateAndSellInternalServerError
const GetFrontendCreateAndSellInternalServerErrorCode int = 500

/*
GetFrontendCreateAndSellInternalServerError Internal server error.

swagger:response getFrontendCreateAndSellInternalServerError
*/
type GetFrontendCreateAndSellInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendCreateAndSellInternalServerError creates GetFrontendCreateAndSellInternalServerError with default headers values
func NewGetFrontendCreateAndSellInternalServerError() *GetFrontendCreateAndSellInternalServerError {

	return &GetFrontendCreateAndSellInternalServerError{}
}

// WithPayload adds the payload to the get frontend create and sell internal server error response
func (o *GetFrontendCreateAndSellInternalServerError) WithPayload(payload *models.ErrorResponse) *GetFrontendCreateAndSellInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend create and sell internal server error response
func (o *GetFrontendCreateAndSellInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendCreateAndSellInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
