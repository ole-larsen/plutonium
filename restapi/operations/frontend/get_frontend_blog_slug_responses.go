// Code generated by go-swagger; DO NOT EDIT.

package frontend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// GetFrontendBlogSlugOKCode is the HTTP code returned for type GetFrontendBlogSlugOK
const GetFrontendBlogSlugOKCode int = 200

/*
GetFrontendBlogSlugOK ok

swagger:response getFrontendBlogSlugOK
*/
type GetFrontendBlogSlugOK struct {

	/*
	  In: Body
	*/
	Payload *models.PublicBlogItem `json:"body,omitempty"`
}

// NewGetFrontendBlogSlugOK creates GetFrontendBlogSlugOK with default headers values
func NewGetFrontendBlogSlugOK() *GetFrontendBlogSlugOK {

	return &GetFrontendBlogSlugOK{}
}

// WithPayload adds the payload to the get frontend blog slug o k response
func (o *GetFrontendBlogSlugOK) WithPayload(payload *models.PublicBlogItem) *GetFrontendBlogSlugOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog slug o k response
func (o *GetFrontendBlogSlugOK) SetPayload(payload *models.PublicBlogItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogSlugOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendBlogSlugBadRequestCode is the HTTP code returned for type GetFrontendBlogSlugBadRequest
const GetFrontendBlogSlugBadRequestCode int = 400

/*
GetFrontendBlogSlugBadRequest Bad request due to missing or invalid parameters.

swagger:response getFrontendBlogSlugBadRequest
*/
type GetFrontendBlogSlugBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendBlogSlugBadRequest creates GetFrontendBlogSlugBadRequest with default headers values
func NewGetFrontendBlogSlugBadRequest() *GetFrontendBlogSlugBadRequest {

	return &GetFrontendBlogSlugBadRequest{}
}

// WithPayload adds the payload to the get frontend blog slug bad request response
func (o *GetFrontendBlogSlugBadRequest) WithPayload(payload *models.ErrorResponse) *GetFrontendBlogSlugBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog slug bad request response
func (o *GetFrontendBlogSlugBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogSlugBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendBlogSlugUnauthorizedCode is the HTTP code returned for type GetFrontendBlogSlugUnauthorized
const GetFrontendBlogSlugUnauthorizedCode int = 401

/*
GetFrontendBlogSlugUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response getFrontendBlogSlugUnauthorized
*/
type GetFrontendBlogSlugUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendBlogSlugUnauthorized creates GetFrontendBlogSlugUnauthorized with default headers values
func NewGetFrontendBlogSlugUnauthorized() *GetFrontendBlogSlugUnauthorized {

	return &GetFrontendBlogSlugUnauthorized{}
}

// WithPayload adds the payload to the get frontend blog slug unauthorized response
func (o *GetFrontendBlogSlugUnauthorized) WithPayload(payload *models.ErrorResponse) *GetFrontendBlogSlugUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog slug unauthorized response
func (o *GetFrontendBlogSlugUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogSlugUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendBlogSlugNotFoundCode is the HTTP code returned for type GetFrontendBlogSlugNotFound
const GetFrontendBlogSlugNotFoundCode int = 404

/*
GetFrontendBlogSlugNotFound Not found. The requested resource could not be found.

swagger:response getFrontendBlogSlugNotFound
*/
type GetFrontendBlogSlugNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendBlogSlugNotFound creates GetFrontendBlogSlugNotFound with default headers values
func NewGetFrontendBlogSlugNotFound() *GetFrontendBlogSlugNotFound {

	return &GetFrontendBlogSlugNotFound{}
}

// WithPayload adds the payload to the get frontend blog slug not found response
func (o *GetFrontendBlogSlugNotFound) WithPayload(payload *models.ErrorResponse) *GetFrontendBlogSlugNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog slug not found response
func (o *GetFrontendBlogSlugNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogSlugNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendBlogSlugInternalServerErrorCode is the HTTP code returned for type GetFrontendBlogSlugInternalServerError
const GetFrontendBlogSlugInternalServerErrorCode int = 500

/*
GetFrontendBlogSlugInternalServerError Internal server error.

swagger:response getFrontendBlogSlugInternalServerError
*/
type GetFrontendBlogSlugInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendBlogSlugInternalServerError creates GetFrontendBlogSlugInternalServerError with default headers values
func NewGetFrontendBlogSlugInternalServerError() *GetFrontendBlogSlugInternalServerError {

	return &GetFrontendBlogSlugInternalServerError{}
}

// WithPayload adds the payload to the get frontend blog slug internal server error response
func (o *GetFrontendBlogSlugInternalServerError) WithPayload(payload *models.ErrorResponse) *GetFrontendBlogSlugInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend blog slug internal server error response
func (o *GetFrontendBlogSlugInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendBlogSlugInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
