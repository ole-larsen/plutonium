// Code generated by go-swagger; DO NOT EDIT.

package frontend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// GetFrontendWalletConnectOKCode is the HTTP code returned for type GetFrontendWalletConnectOK
const GetFrontendWalletConnectOKCode int = 200

/*
GetFrontendWalletConnectOK ok

swagger:response getFrontendWalletConnectOK
*/
type GetFrontendWalletConnectOK struct {

	/*
	  In: Body
	*/
	Payload []*models.PublicWalletConnectItem `json:"body,omitempty"`
}

// NewGetFrontendWalletConnectOK creates GetFrontendWalletConnectOK with default headers values
func NewGetFrontendWalletConnectOK() *GetFrontendWalletConnectOK {

	return &GetFrontendWalletConnectOK{}
}

// WithPayload adds the payload to the get frontend wallet connect o k response
func (o *GetFrontendWalletConnectOK) WithPayload(payload []*models.PublicWalletConnectItem) *GetFrontendWalletConnectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend wallet connect o k response
func (o *GetFrontendWalletConnectOK) SetPayload(payload []*models.PublicWalletConnectItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendWalletConnectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.PublicWalletConnectItem, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFrontendWalletConnectBadRequestCode is the HTTP code returned for type GetFrontendWalletConnectBadRequest
const GetFrontendWalletConnectBadRequestCode int = 400

/*
GetFrontendWalletConnectBadRequest Bad request due to missing or invalid parameters.

swagger:response getFrontendWalletConnectBadRequest
*/
type GetFrontendWalletConnectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendWalletConnectBadRequest creates GetFrontendWalletConnectBadRequest with default headers values
func NewGetFrontendWalletConnectBadRequest() *GetFrontendWalletConnectBadRequest {

	return &GetFrontendWalletConnectBadRequest{}
}

// WithPayload adds the payload to the get frontend wallet connect bad request response
func (o *GetFrontendWalletConnectBadRequest) WithPayload(payload *models.ErrorResponse) *GetFrontendWalletConnectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend wallet connect bad request response
func (o *GetFrontendWalletConnectBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendWalletConnectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendWalletConnectUnauthorizedCode is the HTTP code returned for type GetFrontendWalletConnectUnauthorized
const GetFrontendWalletConnectUnauthorizedCode int = 401

/*
GetFrontendWalletConnectUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response getFrontendWalletConnectUnauthorized
*/
type GetFrontendWalletConnectUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendWalletConnectUnauthorized creates GetFrontendWalletConnectUnauthorized with default headers values
func NewGetFrontendWalletConnectUnauthorized() *GetFrontendWalletConnectUnauthorized {

	return &GetFrontendWalletConnectUnauthorized{}
}

// WithPayload adds the payload to the get frontend wallet connect unauthorized response
func (o *GetFrontendWalletConnectUnauthorized) WithPayload(payload *models.ErrorResponse) *GetFrontendWalletConnectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend wallet connect unauthorized response
func (o *GetFrontendWalletConnectUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendWalletConnectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendWalletConnectNotFoundCode is the HTTP code returned for type GetFrontendWalletConnectNotFound
const GetFrontendWalletConnectNotFoundCode int = 404

/*
GetFrontendWalletConnectNotFound Not found. The requested resource could not be found.

swagger:response getFrontendWalletConnectNotFound
*/
type GetFrontendWalletConnectNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendWalletConnectNotFound creates GetFrontendWalletConnectNotFound with default headers values
func NewGetFrontendWalletConnectNotFound() *GetFrontendWalletConnectNotFound {

	return &GetFrontendWalletConnectNotFound{}
}

// WithPayload adds the payload to the get frontend wallet connect not found response
func (o *GetFrontendWalletConnectNotFound) WithPayload(payload *models.ErrorResponse) *GetFrontendWalletConnectNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend wallet connect not found response
func (o *GetFrontendWalletConnectNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendWalletConnectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendWalletConnectInternalServerErrorCode is the HTTP code returned for type GetFrontendWalletConnectInternalServerError
const GetFrontendWalletConnectInternalServerErrorCode int = 500

/*
GetFrontendWalletConnectInternalServerError Internal server error.

swagger:response getFrontendWalletConnectInternalServerError
*/
type GetFrontendWalletConnectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendWalletConnectInternalServerError creates GetFrontendWalletConnectInternalServerError with default headers values
func NewGetFrontendWalletConnectInternalServerError() *GetFrontendWalletConnectInternalServerError {

	return &GetFrontendWalletConnectInternalServerError{}
}

// WithPayload adds the payload to the get frontend wallet connect internal server error response
func (o *GetFrontendWalletConnectInternalServerError) WithPayload(payload *models.ErrorResponse) *GetFrontendWalletConnectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend wallet connect internal server error response
func (o *GetFrontendWalletConnectInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendWalletConnectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
