// Code generated by go-swagger; DO NOT EDIT.

package frontend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/plutonium/models"
)

// GetFrontendHeaderOKCode is the HTTP code returned for type GetFrontendHeaderOK
const GetFrontendHeaderOKCode int = 200

/*
GetFrontendHeaderOK Successfully fetched the header.

swagger:response getFrontendHeaderOK
*/
type GetFrontendHeaderOK struct {

	/*
	  In: Body
	*/
	Payload *models.PublicHeaderResponse `json:"body,omitempty"`
}

// NewGetFrontendHeaderOK creates GetFrontendHeaderOK with default headers values
func NewGetFrontendHeaderOK() *GetFrontendHeaderOK {

	return &GetFrontendHeaderOK{}
}

// WithPayload adds the payload to the get frontend header o k response
func (o *GetFrontendHeaderOK) WithPayload(payload *models.PublicHeaderResponse) *GetFrontendHeaderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend header o k response
func (o *GetFrontendHeaderOK) SetPayload(payload *models.PublicHeaderResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHeaderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendHeaderBadRequestCode is the HTTP code returned for type GetFrontendHeaderBadRequest
const GetFrontendHeaderBadRequestCode int = 400

/*
GetFrontendHeaderBadRequest Bad request due to missing or invalid parameters.

swagger:response getFrontendHeaderBadRequest
*/
type GetFrontendHeaderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendHeaderBadRequest creates GetFrontendHeaderBadRequest with default headers values
func NewGetFrontendHeaderBadRequest() *GetFrontendHeaderBadRequest {

	return &GetFrontendHeaderBadRequest{}
}

// WithPayload adds the payload to the get frontend header bad request response
func (o *GetFrontendHeaderBadRequest) WithPayload(payload *models.ErrorResponse) *GetFrontendHeaderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend header bad request response
func (o *GetFrontendHeaderBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHeaderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendHeaderUnauthorizedCode is the HTTP code returned for type GetFrontendHeaderUnauthorized
const GetFrontendHeaderUnauthorizedCode int = 401

/*
GetFrontendHeaderUnauthorized Unauthorized. The request is missing valid authentication.

swagger:response getFrontendHeaderUnauthorized
*/
type GetFrontendHeaderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendHeaderUnauthorized creates GetFrontendHeaderUnauthorized with default headers values
func NewGetFrontendHeaderUnauthorized() *GetFrontendHeaderUnauthorized {

	return &GetFrontendHeaderUnauthorized{}
}

// WithPayload adds the payload to the get frontend header unauthorized response
func (o *GetFrontendHeaderUnauthorized) WithPayload(payload *models.ErrorResponse) *GetFrontendHeaderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend header unauthorized response
func (o *GetFrontendHeaderUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHeaderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendHeaderNotFoundCode is the HTTP code returned for type GetFrontendHeaderNotFound
const GetFrontendHeaderNotFoundCode int = 404

/*
GetFrontendHeaderNotFound Not found. The requested resource could not be found.

swagger:response getFrontendHeaderNotFound
*/
type GetFrontendHeaderNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendHeaderNotFound creates GetFrontendHeaderNotFound with default headers values
func NewGetFrontendHeaderNotFound() *GetFrontendHeaderNotFound {

	return &GetFrontendHeaderNotFound{}
}

// WithPayload adds the payload to the get frontend header not found response
func (o *GetFrontendHeaderNotFound) WithPayload(payload *models.ErrorResponse) *GetFrontendHeaderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend header not found response
func (o *GetFrontendHeaderNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHeaderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFrontendHeaderInternalServerErrorCode is the HTTP code returned for type GetFrontendHeaderInternalServerError
const GetFrontendHeaderInternalServerErrorCode int = 500

/*
GetFrontendHeaderInternalServerError Internal server error.

swagger:response getFrontendHeaderInternalServerError
*/
type GetFrontendHeaderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetFrontendHeaderInternalServerError creates GetFrontendHeaderInternalServerError with default headers values
func NewGetFrontendHeaderInternalServerError() *GetFrontendHeaderInternalServerError {

	return &GetFrontendHeaderInternalServerError{}
}

// WithPayload adds the payload to the get frontend header internal server error response
func (o *GetFrontendHeaderInternalServerError) WithPayload(payload *models.ErrorResponse) *GetFrontendHeaderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get frontend header internal server error response
func (o *GetFrontendHeaderInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFrontendHeaderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
